
library(broom) #fortify since ggplot2 may deprecate the function
library(ggplot2)

#create multiplot function
multiplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {
  require(grid)

  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  if (is.null(layout)) {
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

  if (numPlots == 1) {
    print(plots[[1]])

  } else {
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    for (i in 1:numPlots) {
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
#library(RSocrata) 
#data<-read.socrata("https://data.cityofchicago.org/Health-Human-Services/Census-Data-Selected-socioeconomic-indicators-in-C/kn9c-c2s2")
setwd("C:/miscosas/empresas/notas30012/data")

data<-read.table("Census_Data_Selected_socioeconomic_indicators_in_Chicago_2008_2012.csv",sep=",",header=T,quote = "")
data<-data[-nrow(data),]#last row is all of Chicago, Chicago not showing up in data file

data2<-as.data.frame(data[,-c(1,2,9)])
names(data2)<-c("PCNT_H_C", "PCNT_B_POV","UNEMP","NO_HS","U16O64","INC")
names(data2)
data2<-data2[,c(6,1:5)]

# example
data3<-as.data.frame(data2[,-c(4,6)])
p1<-ggplot(data3, aes(x=PCNT_H_C, y=INC)) + 
xlab('PCNT_H_C')+
ylab('')+
    geom_point(shape=1)  +    # Use hollow circles
theme(axis.line.y=element_blank(),
          #axis.text.y=element_blank(),
          #axis.ticks.y=element_blank(),
          #axis.title.y="INC",
          #axis.title.x="PCNT",
          panel.grid.minor.y=element_blank(),
          panel.grid.major.y=element_blank(),
          panel.grid.minor.x=element_blank(),
          panel.grid.major.x=element_blank())+theme_bw()

p2<-ggplot(data3, aes(x=PCNT_B_POV, y=INC)) + 
xlab('PCNT_B_POV')+
ylab('')+
    geom_point(shape=1)  +    # Use hollow circles
theme(axis.line.y=element_blank(),
          #axis.text.y=element_blank(),
          #axis.ticks.y=element_blank(),
          #axis.title.y="INC",
          #axis.title.x="PCNT",
          panel.grid.minor.y=element_blank(),
          panel.grid.major.y=element_blank(),
          panel.grid.minor.x=element_blank(),
          panel.grid.major.x=element_blank())+theme_bw()

p3<-ggplot(data3, aes(x=NO_HS, y=INC)) + 
xlab('NO_HS')+
ylab('')+
    geom_point(shape=1)  +    # Use hollow circles
theme(axis.line.y=element_blank(),
          #axis.text.y=element_blank(),
          #axis.ticks.y=element_blank(),
          #axis.title.y="INC",
          #axis.title.x="PCNT",
          panel.grid.minor.y=element_blank(),
          panel.grid.major.y=element_blank(),
          panel.grid.minor.x=element_blank(),
          panel.grid.major.x=element_blank())+theme_bw()

multiplot(p1,p2,p3,cols=3)
#dev.print(device=postscript, "C:/miscosas/empresas/notas30012/figures/scatterplotsINCOMEMLR.eps", onefile=FALSE, horizontal=FALSE)

fit<-lm(PER.CAPITA.INCOME~PERCENT.AGED.25..WITHOUT.HIGH.SCHOOL.DIPLOMA+PERCENT.HOUSEHOLDS.BELOW.POVERTY+PERCENT.OF.HOUSING.CROWDED,data=data)
summary(fit)

var(data2$INC)*76
anova(fit) #to figure out SS

fit2<-update(fit,.~.-PERCENT.OF.HOUSING.CROWDED)
summary(fit2)

pr<-predict(fit) #observation 15 and 30 are problems

##### matrixplot example
pairs(data3,upper.panel=NULL)
#dev.print(device=postscript, "C:/miscosas/empresas/notas30012/figures/chicagomatrixplot.eps", onefile=FALSE, horizontal=FALSE)

cor(dat3)

#residual diagnostics example


myfortfit<-fortify(fit2)
# USING RESIDUALS INSTEAD OF STD RESIDUALS FOR ANOVA. I INTRODUCE THE STD RESID IN 
# THE SIMPLE LINEAR REG CHAPTER AND CAN USE .stdresid from fortify then
# Homoscedasticity assumption
p1<-ggplot(data = myfortfit, aes(x = .fitted, y = .stdresid)) +
  geom_hline(yintercept = 0, colour = "firebrick3") +
  geom_point()+ylab('Standardized Residual')+xlab('Fitted Values')+
  ggtitle('Standardized Residual vs Fitted')+theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size=7),axis.title=element_text(size=7)) 



# Normality assumption
p2<-ggplot(data = myfortfit, aes(sample = .stdresid)) +
  stat_qq() + ggtitle('Normal Probability Plot')+ #qq plot and normal probability plot are not the same thing
  ylab('Sample Quantiles')+xlab('Theoretical Quantiles')+
  geom_abline(colour = "firebrick3")+theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size=7),axis.title=element_text(size=7))

  ncl<-nclass.Sturges(fit2$residuals)
p3<-ggplot(myfortfit, aes(x=.stdresid)) + geom_histogram(bins=ncl)#qplot(.stdresid, data=myfortfit,geom="histogram")
    p3<-p3+ylab("")+xlab('Standardized Residual')
    p3<-p3+ggtitle('Histogram')+theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size=7),axis.title=element_text(size=7))

multiplot(p2,p3,p1,cols=2)
#dev.print(device=postscript, "C:/miscosas/empresas/notas30012/figures/diagnosticplotschicagoincome.eps", onefile=FALSE, horizontal=FALSE)

#######################################################problem model

fit.all<-lm(INC~UNEMP+U16O64+NO_HS+PCNT_B_POV+PCNT_H_C,data=data2)
summary(fit.all)
fit.all2<-update(fit.all,.~.-PCNT_H_C)
summary(fit.all2)
fit.all2<-update(fit.all2,.~.-PCNT_B_POV)
summary(fit.all2) #all significant by t-tests

"INC"        "PCNT_H_C"   "PCNT_B_POV" "UNEMP"      "NO_HS"     
[6] "U16O64"

#nonlinear 
fit.nl<-lm(log(INC)~UNEMP+poly(NO_HS,2,raw=TRUE)+PCNT_B_POV+
 U16O64,data=data2)
summary(fit.nl)

#using AIC
step(fit.all, direction = "backward", trace=T )



###### centering problem
x_1<-data$PERCENT.HOUSEHOLDS.BELOW.POVERTY-mean(data$PERCENT.HOUSEHOLDS.BELOW.POVERTY,na.rm=T)
x_2<-data$PERCENT.AGED.25..WITHOUT.HIGH.SCHOOL.DIPLOMA-mean(data$PERCENT.AGED.25..WITHOUT.HIGH.SCHOOL.DIPLOMA,na.rm=T)
fit_c<-lm(PER.CAPITA.INCOME~x_1+x_2,data=data)
summary(fit_c)


##### natual log problem

